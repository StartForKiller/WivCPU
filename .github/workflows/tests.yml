name: Automated core testing

on:
  push:
  pull_request:

jobs:
  build:
    name: '[${{ matrix.docker_image }}@${{ matrix.build_type }}@apt]'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build_type: [Release]
        os:
          - ubuntu-latest
        docker_image:
          - "ubuntu:22.04"
    container:
      image: ${{ matrix.docker_image }}

    steps:
    - uses: actions/checkout@v3


    - name: Dependencies
      run: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get -y upgrade
        apt-get -y install cmake pkg-config build-essential ninja-build git libssl-dev libuv1-dev libz-dev libboost-dev autoconf verilator libudev-dev libpthread-stubs0-dev libgl1-mesa-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxrandr-dev libfreetype6-dev libglew-dev libjpeg8-dev libsndfile1-dev libopenal-dev gcc-riscv64-unknown-elf binutils-riscv64-unknown-elf
        git clone https://github.com/sifive/elf2hex.git
        cd elf2hex
        autoreconf -i
        ./configure --target=riscv64-unknown-elf
        make
        make install
        cd ..
        cd samples/riscv-tests/
        git clone https://github.com/StartForKiller/riscv-tests.git riscv-tests
        cd riscv-tests/
        git clone https://github.com/StartForKiller/riscv-test-env.git env

    - name: Configure
      run: |
        mkdir -p build
        cd build
        cmake -GNinja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
    - name: Build
      shell: bash -l {0}
      run: |
        cd build
        cmake --build . --config ${{ matrix.build_type }}
    - name: Test
      shell: bash -l {0}
      run: |
        chmod +x ./test.sh
        ./test.sh
